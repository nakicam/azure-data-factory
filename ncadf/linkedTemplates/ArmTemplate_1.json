{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory-Name",
			"defaultValue": "ncadf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_azurefunction_test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web Activity",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "WebHook",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://bd-eus2-fapp.azurewebsites.net/api/GetTime?code=WPbrtWZpOERh8z8dl2UjJ/Xu8XsaRHk6I49KKikRWzr38B8n6fax4w==",
							"method": "POST",
							"headers": {},
							"body": "{\n    timezone: \"Eastern Standard Time\"\n}"
						}
					},
					{
						"name": "Azure Function",
						"type": "AzureFunctionActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "GetTime-AF ",
							"method": "POST",
							"headers": {},
							"body": "{\n    timezone: \"Eastern Standard Time\"\n}"
						},
						"linkedServiceName": {
							"referenceName": "ls_af_gettime",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "WebHook",
						"type": "WebHook",
						"dependsOn": [
							{
								"activity": "Azure Function",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"url": "https://bd-eus2-fapp.azurewebsites.net/api/GetTime-WH?code=EzOt81JcICeAzV2c4OqFBSy0Hrar9aCHEygHaClJJm7iHds1wYtfKg==",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"timezone": "Eastern Standard Time"
							},
							"timeout": "00:09:00",
							"reportStatusOnCallBack": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Azure Functions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_default_value_array')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Each Parameter Meal",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.par_meal_array",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "pl_meal_array_child",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_default_value_array_child",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"par_meal_array": {
												"value": "@item().meal_items",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"par_meal_array": {
						"type": "array",
						"defaultValue": [
							{
								"meal_type": "Breakfast",
								"meal_time": "07:00:00",
								"meal_items": [
									"Egg",
									"Greek Yogurt",
									"Coffee"
								]
							},
							{
								"meal_type": "Lunch",
								"meal_time": "12:00:00",
								"meal_items": [
									"Greek Salad",
									"Salmon Bagels",
									"Tea"
								]
							},
							{
								"meal_type": "Dinner",
								"meal_time": "18:00:00",
								"meal_items": [
									"Kale Salad",
									"Lentil Soup",
									"Water"
								]
							}
						]
					}
				},
				"folder": {
					"name": "Working with Arrays"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_durable_function_loop_polling')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Azure Durable Function call",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "Set Input for Function App",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "orchestrators/DurableFunctions-Orchestrator",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@variables('var_input')",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_af",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Check Completed Status",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Azure Durable Function call",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(or(equals(activity('Get Current Function Status').output.runtimeStatus, 'Pending'), equals(activity('Get Current Function Status').output.runtimeStatus, 'Running')))\n\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Wait 5 seconds",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								},
								{
									"name": "Get Current Function Status",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Wait 5 seconds",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Azure Durable Function call').output.statusQueryGetUri\n",
											"type": "Expression"
										},
										"method": "GET",
										"headers": {}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Set Input for Function App",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_input",
							"value": "{\"timezone\":\"Eastern Standard Time\"}"
						}
					},
					{
						"name": "Get Function App Output",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Check Completed Status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_output",
							"value": {
								"value": "@activity('Get Current Function Status').output.output.Response",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"var_input": {
						"type": "String"
					},
					"var_output": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Azure Functions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_durable_function_simple_polling')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Call Azure Durable Function",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "Set Input for Function App",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "orchestrators/DurableFunctions-Orchestrator",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@variables('var_input')",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_af",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set Input for Function App",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_input",
							"value": "{\"timezone\":\"Eastern Standard Time\"}"
						}
					},
					{
						"name": "Get Function App Output",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Current Function Status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_output",
							"value": {
								"value": "@activity('Get Current Function Status').output.output.Response",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get Current Function Status",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Call Azure Durable Function",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": {
								"value": "@activity('Call Azure Durable Function').output.statusQueryGetUri\n",
								"type": "Expression"
							},
							"method": "GET",
							"headers": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"var_input": {
						"type": "String"
					},
					"var_output": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Azure Functions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_durable_function_simple_polling_safe')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set Input for Function App",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_input",
							"value": "{\"timezone\":\"Eastern Standard Time\"}"
						}
					},
					{
						"name": "Get Function App Output",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Azure Function Execution",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_output",
							"value": {
								"value": "@activity('Get Current Function Status').output.output.Response",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Azure Function Execution",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set Input for Function App",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Get Current Function Status').output.output.Status, 'OK')\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Call Azure Durable Function",
									"type": "AzureFunctionActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"functionName": "orchestrators/DurableFunctions-Orchestrator",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "@variables('var_input')",
											"type": "Expression"
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_af",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "Get Current Function Status",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Call Azure Durable Function",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "@activity('Call Azure Durable Function').output.statusQueryGetUri\n",
											"type": "Expression"
										},
										"method": "GET",
										"headers": {}
									}
								}
							],
							"timeout": "0.01:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"var_input": {
						"type": "String"
					},
					"var_output": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Azure Functions"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_passing_array_between_pipelines')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set Array Variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "pl_passing_array_between_pipelines_child",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_meal_array",
							"value": {
								"value": "@json('[\"Egg\",\"Toast\",\"Coffee\"]')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "pl_passing_array_between_pipelines_child",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_passing_array_child",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"par_meal_array": {
									"value": "@json('[\"Egg\",\"Toast\",\"Coffee\"]')",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"par_meal_array": {
						"type": "array",
						"defaultValue": [
							"Egg",
							"Toast",
							"Coffee"
						]
					}
				},
				"variables": {
					"var_meal_array": {
						"type": "Array",
						"defaultValue": [
							"Egg",
							"Toast",
							"Coffee"
						]
					}
				},
				"folder": {
					"name": "Working with Arrays"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_Gen2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage_Gen2",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "TaxiDemo"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().folder",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_dvs_internetsales_init_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStore_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataVaultTesting"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": "dvs_internetsales.csv",
						"folderPath": "AdventureWorksDataVault/InitialLoad"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLS_dvs_product_init_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStore_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataVaultTesting"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"fileName": "dvs_product.csv",
						"folderPath": "AdventureWorksDataVault/InitialLoad"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ProductAlternateKey",
						"type": "String"
					},
					{
						"name": "WeightUnitMeasureCode",
						"type": "String"
					},
					{
						"name": "SizeUnitMeasureCode",
						"type": "String"
					},
					{
						"name": "EnglishProductName",
						"type": "String"
					},
					{
						"name": "StandardCost",
						"type": "String"
					},
					{
						"name": "FinishedGoodsFlag",
						"type": "String"
					},
					{
						"name": "Color",
						"type": "String"
					},
					{
						"name": "SafetyStockLevel",
						"type": "String"
					},
					{
						"name": "ReorderPoint",
						"type": "String"
					},
					{
						"name": "ListPrice",
						"type": "String"
					},
					{
						"name": "Size",
						"type": "String"
					},
					{
						"name": "SizeRange",
						"type": "String"
					},
					{
						"name": "Weight",
						"type": "String"
					},
					{
						"name": "ModelName",
						"type": "String"
					},
					{
						"name": "StartDate",
						"type": "String"
					},
					{
						"name": "EndDate",
						"type": "String"
					},
					{
						"name": "Status",
						"type": "String"
					},
					{
						"name": "HUB_Product_HK",
						"type": "String"
					},
					{
						"name": "SAT_Product_HDIFF",
						"type": "String"
					},
					{
						"name": "LOAD_TS",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASQL_DV_HUB_Customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_DV_LS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataVaultTesting"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "HUB_Customer_HK",
						"type": "varchar"
					},
					{
						"name": "CustomerAlternateKey",
						"type": "nvarchar"
					},
					{
						"name": "LOAD_TS",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "HUB_Customer"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASQL_DV_HUB_Geography')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_DV_LS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataVaultTesting"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "HUB_Geography_HK",
						"type": "varchar"
					},
					{
						"name": "GeographyAlternateKey",
						"type": "nvarchar"
					},
					{
						"name": "LOAD_TS",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "HUB_Geography"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASQL_DV_HUB_Product')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_DV_LS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataVaultTesting"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "HUB_Product_HK",
						"type": "varchar"
					},
					{
						"name": "ProductAlternateKey",
						"type": "nvarchar"
					},
					{
						"name": "LOAD_TS",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[HUB_Product]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASQL_DV_LINK_CustomerGeography')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_DV_LS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataVaultTesting"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "LINK_CustomerGeography_HK",
						"type": "varchar"
					},
					{
						"name": "HUB_Customer_HK",
						"type": "varchar"
					},
					{
						"name": "HUB_Geography_HK",
						"type": "varchar"
					},
					{
						"name": "CustomerAlternateKey",
						"type": "nvarchar"
					},
					{
						"name": "GeographyAlternateKey",
						"type": "nvarchar"
					},
					{
						"name": "LOAD_TS",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "LINK_CustomerGeography"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASQL_DV_LINK_InternetSales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_DV_LS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataVaultTesting"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "LINK_InternetSales_HK",
						"type": "varchar"
					},
					{
						"name": "HUB_Customer_HK",
						"type": "varchar"
					},
					{
						"name": "HUB_Product_HK",
						"type": "varchar"
					},
					{
						"name": "ProductAlternateKey",
						"type": "nvarchar"
					},
					{
						"name": "CustomerAlternateKey",
						"type": "nvarchar"
					},
					{
						"name": "SalesOrderNumber",
						"type": "nvarchar"
					},
					{
						"name": "SalesOrderLineNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "LOAD_TS",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[LINK_InternetSales]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASQL_DV_SAT_Customer')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_DV_LS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataVaultTesting"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "HUB_Customer_HK",
						"type": "varchar"
					},
					{
						"name": "Title",
						"type": "nvarchar"
					},
					{
						"name": "FirstName",
						"type": "nvarchar"
					},
					{
						"name": "MiddleName",
						"type": "nvarchar"
					},
					{
						"name": "LastName",
						"type": "nvarchar"
					},
					{
						"name": "NameStyle",
						"type": "bit"
					},
					{
						"name": "BirthDate",
						"type": "date"
					},
					{
						"name": "MaritalStatus",
						"type": "nchar"
					},
					{
						"name": "Suffix",
						"type": "nvarchar"
					},
					{
						"name": "Gender",
						"type": "nvarchar"
					},
					{
						"name": "EmailAddress",
						"type": "nvarchar"
					},
					{
						"name": "YearlyIncome",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalChildren",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "NumberChildrenAtHome",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "HouseOwnerFlag",
						"type": "nchar"
					},
					{
						"name": "NumberCarsOwned",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "AddressLine1",
						"type": "nvarchar"
					},
					{
						"name": "AddressLine2",
						"type": "nvarchar"
					},
					{
						"name": "SAT_Customer_HDIFF",
						"type": "varchar"
					},
					{
						"name": "LOAD_TS",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SAT_Customer"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASQL_DV_SAT_Customer_Latest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_DV_LS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataVaultTesting"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "HUB_Customer_HK",
						"type": "varchar"
					},
					{
						"name": "SAT_Customer_HDIFF",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "vw_latest_sat_customer"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASQL_DV_SAT_Geography')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_DV_LS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataVaultTesting"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "HUB_Geography_HK",
						"type": "varchar"
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "StateProvinceCode",
						"type": "nvarchar"
					},
					{
						"name": "StateProvinceName",
						"type": "nvarchar"
					},
					{
						"name": "CountryRegionCode",
						"type": "nvarchar"
					},
					{
						"name": "EnglishCountryRegionName",
						"type": "nvarchar"
					},
					{
						"name": "PostalCode",
						"type": "nvarchar"
					},
					{
						"name": "SAT_Geography_HDIFF",
						"type": "varchar"
					},
					{
						"name": "LOAD_TS",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "SAT_Geography"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASQL_DV_SAT_Geography_Latest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_DV_LS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataVaultTesting"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "HUB_Geography_HK",
						"type": "varchar"
					},
					{
						"name": "SAT_Geography_HDIFF",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "vw_latest_sat_geography"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASQL_DV_SAT_InternetSales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_DV_LS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataVaultTesting"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "LINK_InternetSales_HK",
						"type": "varchar"
					},
					{
						"name": "RevisionNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "OrderQuantity",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "UnitPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ExtendedAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "UnitPriceDiscountPct",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DiscountAmount",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ProductStandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalProductCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "SalesAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TaxAmt",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "CarrierTrackingNumber",
						"type": "nvarchar"
					},
					{
						"name": "CustomerPONumber",
						"type": "nvarchar"
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DueDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShipDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SAT_InternetSales_HDIFF",
						"type": "varchar"
					},
					{
						"name": "LOAD_TS",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[SAT_InternetSales]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ASQL_DV_SAT_InternetSales_Latest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase_DV_LS",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "DataVaultTesting"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "LINK_InternetSales_HK",
						"type": "varchar"
					},
					{
						"name": "SAT_InternetSales_HDIFF",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[vw_latest_sat_internetsales]"
				}
			},
			"dependsOn": []
		}
	]
}