{
	"name": "NYC_Taxi_Distance_Trip_wdf",
	"properties": {
		"type": "WranglingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "TripData",
					"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~>  TripData",
					"dataset": {
						"referenceName": "TripData",
						"type": "DatasetReference"
					}
				},
				{
					"name": "AdventureWorks",
					"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~>  AdventureWorks",
					"dataset": {
						"referenceName": "AdventureWorks",
						"type": "DatasetReference"
					}
				}
			],
			"script": "section Section1;\r\nshared TripData = let\r\n  AdfDoc = AzureStorage.DataLakeContents(\"https://ncdatalake.dfs.core.windows.net/ncdatalake/trip_data_1.csv\"),\r\n  Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]),\r\n  PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true])\r\nin\r\n  PromotedHeaders;\r\nshared AdventureWorks = let\r\n  AdfDoc = Sql.Database(\"ncsqldbserver.database.windows.net\", \"ncsqldb\", [CreateNavigationProperties = false]),\r\n  InputTable = AdfDoc{[Schema = \"dbo\", Item = \"Employee\"]}[Data]\r\nin\r\n  InputTable;\r\nshared UserQuery = let\r\n  Source = TripData,\r\n  ChangedType = Table.TransformColumnTypes(Source, {{\"trip_distance\", type number}, {\"pickup_longitude\", type number}, {\"pickup_latitude\", type number}, {\"dropoff_longitude\", type number}, {\"dropoff_latitude\", type number}}),\r\n  Lat1_Rad = Table.AddColumn(ChangedType, \"Lat1_Rad\", each ([pickup_latitude] / 180) * Number.PI),\r\n  Lon1_Rad = Table.AddColumn(Lat1_Rad, \"Lon1_Rad\", each ([pickup_longitude] / 180) * Number.PI),\r\n  Lat2_Rad = Table.AddColumn(Lon1_Rad, \"Lat2_Rad\", each ([dropoff_latitude] / 180)    * Number.PI),\r\n  Lon2_Rad = Table.AddColumn(Lat2_Rad, \"Lon2_Rad\", each ([dropoff_longitude] / 180) * Number.PI),\r\n  Distance_Mi = Table.AddColumn(Lon2_Rad, \"Distance_Mi\", each Number.Acos(Number.Sin([Lat1_Rad]) * Number.Sin([Lat2_Rad]) + Number.Cos([Lat1_Rad]) * Number.Cos([Lat2_Rad]) * Number.Cos([Lon2_Rad]-[Lon1_Rad])) * 3959),\r\n  RemovedColumns = Table.RemoveColumns(Distance_Mi, {\"Lat1_Rad\", \"Lon1_Rad\", \"Lat2_Rad\", \"Lon2_Rad\"})\r\nin\r\n  RemovedColumns;\r\n",
			"documentLocale": "en-us"
		}
	}
}